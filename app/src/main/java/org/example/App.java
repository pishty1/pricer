/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }


    public double simpleMonteCarlo1(double expiry, double strike, double spot, double vol, double r, long numPaths) {
        var variance = vol * vol * expiry;
        var rootVariance = Math.sqrt(variance);
        var itoCorrection = -0.5 * variance;

        var movedSpot = spot * Math.exp(r * expiry + itoCorrection);
        var thisSpot = 0.0;
        var runningSum = 0.0;

        for (int i = 0; i < numPaths; i++) {
            double thisGaussian = Random1.getGaussianBySummation();
            thisSpot = movedSpot * Math.exp(rootVariance * thisGaussian);
            double thisPayoff = Math.max(thisSpot - strike, 0);
            runningSum += thisPayoff;
        }
        var thisMean = runningSum / numPaths;
        thisMean *= Math.exp(-r * expiry);
        return thisMean;
    }
        

    public static void main(String[] args) {
        var expiry = 0.5;
        var strike = 100;
        var spot = 100;
        var vol = 0.2;
        var r = 0.05;
        var numPaths = 100000;
        System.out.println(new App().simpleMonteCarlo1(expiry, strike, spot, vol, r, numPaths));
    }
}
